name: Manual APT Feed Collection

on:
  workflow_dispatch:
    inputs:
      export_format:
        description: 'Export format'
        required: true
        default: 'all'
        type: choice
        options:
          - all
          - json
          - csv
          - stix
          - suricata
          - yara
      update_maltrail:
        description: 'Update Maltrail repository'
        required: true
        default: true
        type: boolean
      create_release:
        description: 'Create a release'
        required: false
        default: false
        type: boolean

jobs:
  manual-collect:
    runs-on: ubuntu-latest

    permissions:
      contents: write

    steps:
    - name: Checkout repository
      uses: actions/checkout@v4

    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.10'

    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt

    - name: Clone/Update Maltrail repository
      if: ${{ inputs.update_maltrail }}
      run: |
        mkdir -p data
        if [ -d "data/maltrail" ]; then
          cd data/maltrail
          git pull origin main
          cd ../..
        else
          git clone https://github.com/stamparm/maltrail.git data/maltrail
        fi

    - name: Collect APT indicators
      run: |
        # Set flags based on export format
        FLAGS="--output-dir feeds"
        if [ "${{ inputs.update_maltrail }}" == "false" ]; then
          FLAGS="$FLAGS --no-update"
        fi

        case "${{ inputs.export_format }}" in
          json)
            FLAGS="$FLAGS --json-only"
            ;;
          csv)
            FLAGS="$FLAGS --csv-only"
            ;;
          stix)
            FLAGS="$FLAGS --stix-only"
            ;;
          suricata)
            FLAGS="$FLAGS --suricata-only"
            ;;
          yara)
            FLAGS="$FLAGS --yara-only"
            ;;
        esac

        python apt_threat_feed_collector.py $FLAGS

    - name: Upload artifacts
      uses: actions/upload-artifact@v3
      with:
        name: apt-threat-feeds-${{ github.run_number }}
        path: feeds/

    - name: Commit and push
      run: |
        git config --local user.email "action@github.com"
        git config --local user.name "GitHub Action"

        git add feeds/
        if git diff --staged --quiet; then
          echo "No changes to commit"
        else
          git commit -m "ðŸ”„ Manual update: APT threat feeds - $(date -u '+%Y-%m-%d %H:%M UTC')"
          git push
        fi

    - name: Create release
      if: ${{ inputs.create_release }}
      uses: softprops/action-gh-release@v1
      with:
        tag_name: manual-v${{ github.run_number }}
        name: Manual APT Feeds Release ${{ github.run_number }}
        body: |
          Manual collection of APT threat feeds
          - Export format: ${{ inputs.export_format }}
          - Maltrail updated: ${{ inputs.update_maltrail }}
          - Collection time: ${{ github.event.head_commit.timestamp }}
        files: |
          feeds/*
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}